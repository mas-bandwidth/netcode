name: CI

on: [push, pull_request]

jobs:
  build_and_test:
    name: Build & test

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        configuration: [release, debug]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master
    - name: Setup premake
      uses: abel0b/setup-premake@v1

    # Build with premake + make
    - name: Build (gmake)
      if: runner.os != 'Windows'
      run: |
        premake5 gmake
        make clean
        make all config=${{ matrix.configuration }}

    # Run the tests with sh syntax
    - name: Test (gmake)
      if: runner.os != 'Windows'
      run: ./bin/test

    ## Windows-specific build steps
    # Set up PATH variables to point to MSBuild from at least VS 16.1 (2019)
    - name: Setup (vs2019)
      if: runner.os == 'Windows'
      uses: microsoft/setup-msbuild@v1.1
      with:
        vs-version: '16.1.0'

    # Build with premake + msbuild
    - name: Build (vs2019)
      if: runner.os == 'Windows'
      run: |
        premake5 vs2019
        msbuild netcode.sln -nologo -m -t:Clean  -p:Configuration=${{ matrix.configuration }}
        msbuild netcode.sln -nologo -m -p:Configuration=${{ matrix.configuration }}

    # Run the tests with Powershell syntax
    - name: Test (vs2019)
      if: runner.os == 'Windows'
      run: "& ./bin/test.exe"

  build_and_test_mingw:
    name: Build & test (MingW)

    strategy:
      matrix:
        os: [windows-latest]
        configuration: [release, debug]

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@master

    # Set up msys2/MingW-w64 toolchain
    - name: Setup (msys2)
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          mingw-w64-premake
          mingw-w64-gcc

    - name: Build (msys2)
      shell: msys2 {0}
      run: |
        premake5 gmake
        make clean
        make all config=${{ matrix.configuration }}

    - name: Test (msys2)
      shell: msys2 {0}
      run: "& ./bin/test.exe"
